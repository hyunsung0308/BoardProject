<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
		<context:annotation-config></context:annotation-config>
		
		<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
			
			<property name="driverClassName"
				value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
			<property name="jdbcUrl"
				value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE"></property>
			<property name="username" value="c##book_ex"></property>
			<property name="password" value="book_ex"></property>	
		</bean>
		
		<!-- HikariCP configuration -->
	   <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	      <constructor-arg ref="hikariConfig" />
	   </bean>

		<bean id="sqlSessionFactory"
     		 class="org.mybatis.spring.SqlSessionFactoryBean">
      		<property name="dataSource" ref="dataSource"></property>
   		</bean>
   		
   		<bean id="transactionManager"
   		 class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   		 	<property name="dataSource" ref="dataSource"></property>
   		 </bean>
		
		<tx:annotation-driven/>
		
		<mybatis-spring:scan base-package="org.zerock.mapper"/>
		
		<context:component-scan base-package="org.zerock.service"></context:component-scan>
		
		<context:component-scan base-package="org.zerock.aop"></context:component-scan>
		
		
		<!-- root-context.xml에서는 <component-scan>을 이용해서 'org.zerock.service'패키지와 'org.zerock.aop' 패키지를 스캔합니다. 이 과정
		에서 SampleServiceImpl 클래스와 LogAdvice는 스프링의 빈(객체)으로 등록될 것이고, <aop:aspectj-autoproxy>를 이용해서 LogAdvice에 설정한 @Before 가 동작하게 됩니다. -->
		
		<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
		
</beans>
