<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!--
	스프링 프레임워크가 시작되면 먼저 스프링이 사용하는 메모리 영역을 만들게 되는데 이를 컨텍스트라고 합니다. 스프링에서는 ApplicationContext라는 객체가 만들어집니다.
	스프링은 자신이 객체를 생성하고 관리해야 하는 객체들에 대한 설정이 필요하다.
	이에 대한 설정이 root-context.xml 파일입니다. -->
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	 <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	   
	   
	   <!--  <property name="driverClassName"
	         value="oracle.jdbc.driver.OracleDriver"></property>
	      <property name="jdbcUrl"
	         value="jdbc:oracle:thin:@localhost:1521:XE"></property> --> 
	         
	   <!-- log4jdbc를 이용하는 경우에 JDBC드라이버와 URL정보를 수정해야 합니다. -->  
	         
	      <property name="driverClassName"
	     	value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>   
	      <property name="jdbcUrl" 
	      	value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE"></property>
	        
	      <property name="username" value="c##book_ex"></property>
	      <property name="password" value="book_ex"></property>
	   </bean>
	
	
	<!-- HikariCP configuration -->
	   <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	      <constructor-arg ref="hikariConfig" />
	   </bean>

		<bean id="sqlSessionFactory"
     		 class="org.mybatis.spring.SqlSessionFactoryBean">
      		<property name="dataSource" ref="dataSource"></property>
   		</bean>
		
		<mybatis-spring:scan base-package="org.zerock.mapper"/>
		
		<!-- context:component-scan 태그의 내영을 통해서 패키지를 스캔하기 시작합니다. -->
		<context:component-scan base-package="org.zerock.sample">
		</context:component-scan>
		
</beans>
